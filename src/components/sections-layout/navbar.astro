---
import { getRelativeLocaleUrl } from 'astro:i18n'
import Linkedin from '@icons/linkedin.astro'
import Github from '@icons/github.astro'
import English from '@icons/english.astro'
import Spanish from '@icons/spanish.astro'
import ThemeToggle from '@components/theme/theme-toggle'
import AnimatedGradientText from '@components/magic-ui/animated-gradient-text'
import { cn } from '@utils/utils'

const lang: 'es' | 'en' = (Astro.currentLocale as 'en' | 'es') ?? 'en'
const defaultPage = getRelativeLocaleUrl(lang, '')
const aboutURL = getRelativeLocaleUrl(lang, 'about')
const timelineURL = getRelativeLocaleUrl(lang, 'timeline')
const workURL = getRelativeLocaleUrl(lang, 'work')
const techStackURL = getRelativeLocaleUrl(lang, 'stack/grid')
const bookshelfURL = getRelativeLocaleUrl(lang, 'bookshelf')

const pathname = Astro.url.pathname
const lastChar = pathname.at(-1)
const cleanPathname = pathname.substring(
  1,
  lastChar === '/' ? pathname.length - 1 : pathname.length
)
const splitPathname = cleanPathname.split('/')
const auxRedirect =
  splitPathname.length > 1 && lang !== 'en'
    ? splitPathname.toSpliced(0, 1).join('/')
    : splitPathname.join('/')
const redirect = auxRedirect === 'es' || auxRedirect === '/' ? '' : auxRedirect

const i18n = {
  es: {
    timeline: 'cronología',
    work: 'trabajo',
    about: 'sobre mí',
    techStack: 'tecnologías',
    bookshelf: 'libros'
  },
  en: {
    timeline: 'timeline',
    work: 'work',
    about: 'about',
    techStack: 'tech stack',
    bookshelf: 'bookshelf'
  }
}
---

<nav class="w-[708px] m-auto pt-6">
  <div>
    <div
      class="backdrop-blur-2xl px-4 py-[10px] flex flex-row justify-between bg-[rgba(255,255,255,.3)] dark:bg-[var(--nav-bg)] rounded-xl"
    >
      <div class="flex items-center max-h-10 h-10 w-full">
        <a href={defaultPage}>
          <!-- <span class="playwrite-ui font-bold text-xl">Joan</span> -->
          <AnimatedGradientText>
            <span
              class={cn(
                `animate-gradient bg-gradient-to-r from-[#ffaa40] via-[#9c40ff] to-[#ffaa40] bg-[length:var(--bg-size)_100%] bg-clip-text 
                text-transparent relative top-[2px] h-9`
              )}
            >
              <span class="playwrite-ui font-bold text-xl">Joan</span>
            </span>
            <!-- <span class="playwrite-ui font-bold text-xl">Joan</span> -->
          </AnimatedGradientText>
        </a>
        <div class="flex items-center max-h-10 ml-2 relative w-full justify-center">
          <ul class="m-o flex flex-row">
            <li class="relative">
              <!-- <a href={`${lang === 'en' ? `/timeline` : `/${lang}/timeline`}`}> -->
              <a href={timelineURL}>
                <span class="block relative px-3 text-base tracking-tight font-medium">
                  {i18n[lang].timeline}
                </span>
              </a>
            </li>
            <li class="relative">
              <a class="block relative px-3 text-base tracking-tight font-medium" href={workURL}>
                {i18n[lang].work}
              </a>
            </li>
            <li class="relative">
              <a class="block relative px-3 text-base tracking-tight font-medium" href={aboutURL}
                >{i18n[lang].about}
              </a>
            </li>
            <li class="relative">
              <a
                class="block relative px-3 text-base tracking-tight font-medium"
                href={techStackURL}
                >{i18n[lang].techStack}
              </a>
            </li>
            <li class="relative">
              <a
                class="block relative px-3 text-base tracking-tight font-medium"
                href={bookshelfURL}
                >{i18n[lang].bookshelf}
              </a>
            </li>
          </ul>
        </div>
      </div>
      <div class="flex items-center max-h-10 h-10">
        <div
          class="flex items-center max-h-10 mr-3 border-r border-[rgba(48,52,77,.1)] dark:border-[var(--grey-100)]"
        >
          <a href="https://github.com/JoanRojasMejia" class="py-[2px] px-3" target="_blank"
            ><Github />
          </a>
          <a
            href="https://www.linkedin.com/in/joan-rojas-mejia/"
            target="_blank"
            class="py-[2px] px-3"
          >
            <Linkedin />
          </a>
        </div>
        <div class="flex flex-row">
          <a class="px-2" href={`${lang === 'es' ? `/${redirect}` : `/es/${redirect}`}`}>
            {lang === 'es' ? <Spanish /> : <English />}
          </a>
          <ThemeToggle client:only />
        </div>
      </div>
    </div>
  </div>
</nav>
<script is:inline>
  const i18nTitleAndIcon = {
    es: {
      timeline: {
        name: 'cronología ✦ joan rojas',
        icon: '/timeline.svg'
      },
      work: {
        name: 'trabajo ✦ joan rojas',
        icon: '/work.svg'
      },
      about: {
        name: 'sobre mí ✦ joan rojas',
        icon: '/about.svg'
      },
      stack: {
        name: 'tecnologías ✦ joan rojas',
        icon: '/tech-stack.svg'
      },
      bookshelf: {
        name: 'libros ✦ joan rojas',
        icon: '/bookshelf.svg'
      }
    },
    en: {
      timeline: {
        name: 'timeline ✦ joan rojas',
        icon: '/timeline.svg'
      },
      work: {
        name: 'work ✦ joan rojas',
        icon: '/work.svg'
      },
      about: {
        name: 'about ✦ joan rojas',
        icon: '/about.svg'
      },
      stack: {
        name: 'tech stack ✦ joan rojas',
        icon: '/tech-stack.svg'
      },
      bookshelf: {
        name: 'bookshelf ✦ joan rojas',
        icon: '/bookshelf.svg'
      }
    }
  }

  document.addEventListener('astro:page-load', () => {
    const pathname = window.location.pathname
    const lastChar = pathname.at(-1)
    const cleanPathname = pathname.substring(
      1,
      lastChar === '/' ? pathname.length - 1 : pathname.length
    )
    const splitPathname = cleanPathname.split('/')
    const lang = splitPathname?.[0] === 'es' ? 'es' : 'en'
    const page = splitPathname?.[0] === 'es' ? splitPathname?.[1] : splitPathname?.[0]
    changeDocumentIconAndTitle(i18nTitleAndIcon[lang][page].name, i18nTitleAndIcon[lang][page].icon)
  })

  const changeDocumentIconAndTitle = (name, icon) => {
    const oldLink = document.querySelector('link[rel~="icon"]')
    const link = document.createElement('link')
    link.setAttribute('rel', 'icon')
    link.setAttribute('href', icon)
    document.head.removeChild(oldLink)
    document.head.appendChild(link)
    document.title = name
  }
</script>
